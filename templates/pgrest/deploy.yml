apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "data-tool.fullname" . }}
  labels:
    {{- include "data-tool.labels" . | nindent 4 }}
    tier: backend
spec:
  replicas: {{ .Values.pgrest.hpa.replicaCountMin | default 1 }}
  selector:
    matchLabels:
      {{- include "data-tool.selectorLabels" . | nindent 6 }}
      tier: backend
  template:
    metadata:
      labels:
        {{- include "data-tool.labels" . | nindent 8 }}
        tier: backend
    spec:
      {{- with .Values.pgrest.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.pgrest.image.repository }}:{{ .Values.pgrest.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.pgrest.image.pullPolicy }}
          args: ["/app/postgrest.conf"]
          env:
          - name: PGRST_JWT_SECRET
            valueFrom:
              secretKeyRef:
                name: secret-tcnp
                key: PGRST_JWT_SECRET
          - name: PGRST_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.postgresql.fullnameOverride }}"
                key: password
          - name: PGRST_DB_USERNAME
            value: "{{ .Values.global.postgresql.auth.username }}"
          - name: PGRST_DB_URI
            value: "postgres://$(PGRST_DB_USERNAME):$(PGRST_DB_PASSWORD)@{{ .Values.postgresql.fullnameOverride }}:5432/{{ .Values.global.postgresql.auth.database }}"
          ports:
            - name: http
              containerPort: {{ .Values.pgrest.service.port }}
              protocol: TCP
            - name: http-admin
              containerPort: {{ .Values.pgrest.admin.port }}
              protocol: TCP
          volumeMounts:
            - name: config-volume
              mountPath: /app/postgrest.conf
              subPath: postgrest.conf
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.pgrest.admin.port }}
            initialDelaySeconds: 15
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /live
              port: {{ .Values.pgrest.admin.port }}
            failureThreshold: 2
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /ready
              port: {{ .Values.pgrest.admin.port }}
            failureThreshold: 30
            periodSeconds: 10
          resources:
            {{- toYaml .Values.pgrest.resources | nindent 12 }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "data-tool.fullname" . }}-config